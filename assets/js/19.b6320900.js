(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{427:function(t,a,e){"use strict";e.r(a);var v=e(0),i=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"强缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强缓存"}},[t._v("#")]),t._v(" 强缓存")]),t._v(" "),a("p",[t._v("Expires: 是一个绝对时间，即服务器时间。浏览器检查当前时间，如果还没到失效时间就直接使用缓存文件。")]),t._v(" "),a("p",[t._v("缺点：服务器时间可能与客户端时间不一致，导致缓存时间不准确。")]),t._v(" "),a("p",[t._v("Cache-Control:")]),t._v(" "),a("p",[t._v("max-age：保存的是一个相对时间。表示浏览器收到文件后，缓存在max-age指定的时间内有效。\n如果同时存在 expires 和 cache-control，浏览器总是优先使用 cache-control。")]),t._v(" "),a("p",[t._v("Cache-Control 常见的取值有：")]),t._v(" "),a("ul",[a("li",[t._v("private: 客户端可以缓存")]),t._v(" "),a("li",[t._v("public: 客户端和代理服务器都可以缓存")]),t._v(" "),a("li",[t._v("max-age: 缓存的内容将在xxx秒失效")]),t._v(" "),a("li",[t._v("no-cache: 需要使用协商缓存来验证缓存数据")]),t._v(" "),a("li",[t._v("no-store: 所有内容都不会缓存，强制缓存，协商缓存都不会触发")])]),t._v(" "),a("h3",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[a("strong",[t._v("Last-Modified （Http 1.0）")]),t._v(":\n第一次请求数据时，服务器会将缓存标识和数据内容一起返回给客户端，客户端将二者备份至缓存数据库中。last-modified 是第一次请求资源时，服务器返回的字段，表示资源最后一次更新的时间。")]),t._v(" "),a("p",[a("strong",[t._v("If-Modified-Since")]),t._v(":\n下一次浏览器请求资源时就发送 if-modified-since 字段。服务器将 If-Modified-Since 中携带的时间与资源修改的时间对比，如果时间不一致，则认为更新了，服务器会返回新资源并更新 Last-Modified。\n如果时间一致，则返回 304 状态码，让浏览器继续使用缓存。")]),t._v(" "),a("p",[a("strong",[t._v("Etag（Http 1.1）")]),t._v(":\n资源的实体标识（哈希字符串），当资源内容更新时，Etag会发生改变。\n第一次请求服务器时，服务器用Etag作为缓存标识和数据内容一起返回。Etag是由服务端生成的，然后浏览器会将Etag与资源缓存。")]),t._v(" "),a("p",[a("strong",[t._v("If-None-Match")]),t._v(":\n浏览器会将Etag放入 If-None-Match 请求头中去访问服务器，服务器收到后，会对比两端的标识，当二者不一致时，意味着资源更新，会从服务器的响应读取资源并更新Etag,浏览器将从缓存中读取资源，当二者一致时，意味着资源没有更新，服务器会返回304状态码，浏览器将从缓存中读取资源。")]),t._v(" "),a("p",[t._v("对比完 Last-Modified 与 Etag，我们可以很显然看到，协商缓存每次请求都会与服务器发生“关系”，第一回合都是拿数据和标识，而第二回合就是浏览器“咨询”服务器是否资源已经更新的过程。\n同时，如果以上两种方式同时使用，Etag 优先级会更高，即 Etag( Http 1.1 ) > Last-Modified ( Http 1.0 )")])])}),[],!1,null,null,null);a.default=i.exports}}]);