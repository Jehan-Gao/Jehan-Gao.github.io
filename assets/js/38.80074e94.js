(window.webpackJsonp=window.webpackJsonp||[]).push([[38],{446:function(t,a,e){"use strict";e.r(a);var v=e(0),_=Object(v.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"vue-和-react-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vue-和-react-的区别"}},[t._v("#")]),t._v(" Vue 和 React 的区别")]),t._v(" "),a("h3",{attrs:{id:"共同点："}},[a("a",{staticClass:"header-anchor",attrs:{href:"#共同点："}},[t._v("#")]),t._v(" 共同点：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("数据驱动视图")])]),t._v(" "),a("li",[a("p",[t._v("组件化")])]),t._v(" "),a("li",[a("p",[t._v("都使用 vdom")])])]),t._v(" "),a("h3",{attrs:{id:"不同点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[t._v("#")]),t._v(" 不同点")]),t._v(" "),a("h4",{attrs:{id:"核心思想不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心思想不同"}},[t._v("#")]),t._v(" 核心思想不同")]),t._v(" "),a("p",[t._v("React 推崇函数式编程、数据不可变和单向数据流。")]),t._v(" "),a("p",[t._v("Vue 上手门槛比较低，是一个灵活易用地渐进式框架。")]),t._v(" "),a("h4",{attrs:{id:"组件写法不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组件写法不同"}},[t._v("#")]),t._v(" 组件写法不同")]),t._v(" "),a("p",[t._v("React 推荐使用 JSX 写法，把 HTML 和 CSS 都写入 JS 中。")]),t._v(" "),a("p",[t._v("Vue 推荐使用单文件组件，易于理解。")]),t._v(" "),a("h4",{attrs:{id:"响应式原理不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#响应式原理不同"}},[t._v("#")]),t._v(" 响应式原理不同")]),t._v(" "),a("p",[t._v("Vue 2 通过 defineProperty 对 data 中的属性做响应式拦截，绑定 getter 和 setter 。")]),t._v(" "),a("p",[t._v("Vue 3 通过 Proxy 对 data 对象进行拦截，不再需要递归遍历内部的属性去绑定 getter 和 setter 。")]),t._v(" "),a("p",[t._v("自动收集依赖，当数据（属性）发生改变的时候，自动触发依赖的更新。")]),t._v(" "),a("p",[t._v("React 基于状态机的概念，强调 state 是不可变数据。")]),t._v(" "),a("p",[t._v("需要对 state 的时候，需要显示地调用 setState(), 用新的 state 数据 替换老的 state 数据。")]),t._v(" "),a("h4",{attrs:{id:"diff-算法不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#diff-算法不同"}},[t._v("#")]),t._v(" diff 算法不同")]),t._v(" "),a("p",[t._v("React:")]),t._v(" "),a("p",[t._v("同一层次的一组子节点， 可以通过 key 来区分")]),t._v(" "),a("ul",[a("li",[t._v("通过唯一的 key 来判断老集合中是否有相同的节点存在，如果没有的话就新创建")]),t._v(" "),a("li",[t._v("如果有的话，会对新集合中节点的位置与老集合中节点位置进行比较，如果位置不一样，则进行移。")]),t._v(" "),a("li",[t._v("如果发现新集合中没有，但在老集合中有节点，则会进行删除操作")])]),t._v(" "),a("p",[t._v("Vue:")]),t._v(" "),a("p",[t._v("Vue2 采用了双端比较的方法，旧头新尾，新头旧尾 这样去比较。\n（有时间详细更新一下这里）")]),t._v(" "),a("h4",{attrs:{id:"api-的不同"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-的不同"}},[t._v("#")]),t._v(" API 的不同")])])}),[],!1,null,null,null);a.default=_.exports}}]);